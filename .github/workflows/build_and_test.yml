name: Workflow for building and running some simple hardware tests
on: [push]
env:
  LAGER_GATEWAY: 45
concurrency: 
  group: dut
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build Project
        uses: docker://lagerdata/devenv-microchip-pic32mm
        with:
          entrypoint: lager
          args: exec generate-and-build

      - name: Upload the app hexfile
        uses: actions/upload-artifact@v2
        with:
          name: app_hexfile
          path: pic32mm_usb_curiosity_demo.X/dist/default/production/pic32mm_usb_curiosity_demo.X.production.hex


  connect:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to gateway
        uses: docker://lagerdata/lager-cli:version-0.1.97
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}     #This is setup inside GitHub see https://docs.lagerdata.com/ci/github_actions.html     
        with:
          entrypoint: lager
          args: connect --device pic32mm --transport jtag --speed 1000 --force


  flash: #Only proceed to this step if the build and connect jobs succeeded 
    runs-on: ubuntu-latest
    needs: [build, connect]
    steps:
      - name: Download the app hexfile
        uses: actions/download-artifact@v2
        with:
          name: app_hexfile

      - name: Flash App
        uses: docker://lagerdata/lager-cli:version-0.1.97
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: lager
          args: flash --hexfile /github/workspace/pic32mm_usb_curiosity_demo.X.production.hex

  test: #test
    runs-on: ubuntu-latest
    needs: [flash]
    steps:
      - name: Reset board
        uses: docker://lagerdata/lager-cli:version-0.1.97
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}     #This is setup inside GitHub see https://docs.lagerdata.com/ci/github_actions.html     
        with:
          entrypoint: lager
          args: reset
